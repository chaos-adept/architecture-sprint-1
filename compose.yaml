services:

  mongo:
    image: mongo
    restart: always
    logging:
      driver: none
    ports:
      - 27017:27017      
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend-test:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    command: npm run lint
    restart: 'no'
    depends_on:
      mongo:
        condition: service_healthy

  backend:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 3100:3100
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  frontend-test:
    build:
      context: frontend
      dockerfile: ../Dockerfile.frontend
    command: yarn test:microfrontend
    restart: 'no'
    environment:
          CI: true

  frontend-auth-microfrontend:
    build:
      context: frontend/microfrontend/auth-microfrontend
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3001:3001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/remoteEntry.js"]
      interval: 15s
      retries: 15
      start_period: 10s
      timeout: 10s

  frontend-cards-microfrontend:
    build:
      context: frontend/microfrontend/cards-microfrontend
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3002:3002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/remoteEntry.js"]
      interval: 15s
      retries: 15
      start_period: 10s
      timeout: 10s

  frontend-profile-microfrontend:
    build:
      context: frontend/microfrontend/profile-microfrontend
      dockerfile: ../../../Dockerfile.frontend
    ports:
      - 3003:3003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/remoteEntry.js"]
      interval: 5s
      retries: 15
      start_period: 10s
      timeout: 10s            

  frontend:
    build:
      context: frontend
      dockerfile: ../Dockerfile.frontend
    ports:
      - 3000:3000
    depends_on:
      backend:
        condition: service_healthy
      frontend-auth-microfrontend:
        condition: service_healthy   
      frontend-cards-microfrontend:
        condition: service_healthy    
      frontend-profile-microfrontend:
        condition: service_healthy                         
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 5s
      retries: 15
      start_period: 10s
      timeout: 10s